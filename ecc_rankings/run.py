import os
from .config import OUTPUT_DIR, SEASON, CLUB_NAME
from .bowling import BowlingScraper
from .batting import BattingScraper
from .all_rounder import AllRounderLeaderboard

def main():
    os.makedirs(OUTPUT_DIR, exist_ok=True)

    bowling_out = os.path.join(OUTPUT_DIR, f"kncb_bowling_stats_{SEASON}.html")
    batting_out = os.path.join(OUTPUT_DIR, f"kncb_batting_stats_{SEASON}.html")
    allr_out    = os.path.join(OUTPUT_DIR, f"kncb_allrounder_stats_{SEASON}.html")

    bowling = BowlingScraper(html_path=bowling_out)
    batting = BattingScraper(html_path=batting_out)

    # Scrape
    df_bowling = bowling.scrape()
    df_batting = batting.scrape()

    # Pages
    bowling.save_html(bowling.generate_html(df_bowling))
    batting.save_html(batting.generate_html(df_batting))

    # All-rounder: merged batting + scored bowling
    df_bat_merged = batting.combine_and_score(df_batting)
    df_bowl_scored = bowling.calculate_icc_points(df_bowling)

    allr = AllRounderLeaderboard(season=SEASON, club=CLUB_NAME, html_path=allr_out)
    df_allr = allr.compute(df_bat_merged, df_bowl_scored)
    allr.save_html(allr.generate_html(df_allr))

    # Make (or refresh) docs/index.html
    with open(os.path.join(OUTPUT_DIR, "index.html"), "w", encoding="utf-8") as f:
        f.write(f"""<!doctype html>
<html><head>
  <meta charset="utf-8" />
  <title>ECC Rankings {SEASON}</title>
  <style>body{{font-family:system-ui;margin:24px}}a{{display:block;margin:.5rem 0}}</style>
</head><body>
  <h1>ECC Rankings {SEASON}</h1>
  <a href="kncb_batting_stats_{SEASON}.html">Batting Leaderboard</a>
  <a href="kncb_bowling_stats_{SEASON}.html">Bowling Leaderboard</a>
  <a href="kncb_allrounder_stats_{SEASON}.html">All-Rounder Leaderboard</a>
  <p style="color:#666">Generated by ecc_rankings.</p>
</body></html>
""")

if __name__ == "__main__":
    main()
